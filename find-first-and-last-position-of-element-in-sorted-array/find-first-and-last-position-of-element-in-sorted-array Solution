class   Solution   { 
 public : 
     vector < int >   searchRange ( vector < int > &  nums ,   int  target )   { 
          int  a = - 1 ,  n = nums . size ( ) ; 
          if ( n == 0 ) 
              return   { - 1 , - 1 } ; 
          if ( nums [ 0 ] == target ) 
             a = 0 ; 
          else { 
              int  lo = 0 ,  hi = n - 1 ; 
              while ( lo <= hi ) { 
                  int  mid = lo + ( hi - lo ) / 2 ; 
                  if ( nums [ mid ] == target ) { 
                      if ( mid > 0   &&  nums [ mid - 1 ] < target ) { 
                         a = mid ; 
                          break ; 
                      } 
                     hi = mid - 1 ; 
                  } 
                  else   if ( nums [ mid ] < target ) 
                     lo = mid + 1 ; 
                  else 
                     hi = mid - 1 ; 
              } 
          } 
          if ( a == - 1 ) 
              return   { - 1 , - 1 } ; 
          int  b = a ; 
          if ( nums [ n - 1 ] == target ) 
             b = n - 1 ; 
          else { 
              int  lo = a ,  hi = n - 1 ; 
              while ( lo <= hi ) { 
                  int  mid = lo + ( hi - lo ) / 2 ; 
                  if ( nums [ mid ] == target ) { 
                      if ( mid < n - 1   &&  nums [ mid ] < nums [ mid + 1 ] ) { 
                         b = mid ; 
                          break ; 
                      } 
                     lo = mid + 1 ; 
                  } 
                  else   if ( nums [ mid ] < target ) 
                     lo = mid + 1 ; 
                  else 
                     hi = mid - 1 ; 
              } 
          } 
          return   { a , b } ; 
      } 
 } ;