/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
   // resubmitting coz of it being the daily leetcode challenge 
 class   Solution   { 
 public : 
      int  answer = 0 ; 
      void   dfs ( TreeNode *  root ,   bool  left ,   int  h ) { 
          if ( root == NULL ) 
              return ; 
         answer = max ( answer ,  h ) ; 
          if ( left ) { 
              dfs ( root -> left ,   false ,  h + 1 ) ; 
              dfs ( root -> right ,   true ,   1 ) ; 
          } 
          else { 
              dfs ( root -> right ,   true ,  h + 1 ) ; 
              dfs ( root -> left ,   false ,   1 ) ; 
          } 
      } 
      int   longestZigZag ( TreeNode *  root )   { 
          dfs ( root ,   false ,   0 ) ; 
          dfs ( root ,   true ,   0 ) ; 
          return  answer ; 
      } 
 } ;