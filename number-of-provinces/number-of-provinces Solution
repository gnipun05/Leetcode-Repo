class   Solution   { 
 public : 
      void   dfs ( vector < vector < int >> &  arr ,   int  x ,   int  y ,  vector < bool >   & vis ) { 
         arr [ x ] [ y ] = 0 ; 
         arr [ y ] [ x ] = 0 ; 
         vis [ y ] = true ; 
          for ( int  i = 0 ;  i < arr . size ( ) ;  i ++ ) { 
              if ( y != i  &&  vis [ i ] == false   &&  arr [ y ] [ i ] ) { 
                  dfs ( arr ,  y ,  i ,  vis ) ; 
              } 
          } 
      } 
      int   findCircleNum ( vector < vector < int >> &  arr )   {   // isConnected changed to arr 
          int  answer = 0 ; 
          int  n = arr . size ( ) ; 
         vector < bool >   vis ( n ,   false ) ; 
          for ( int  i = 0 ;  i < n ;  i ++ ) { 
              for ( int  j = 0 ;  j < n ;  j ++ ) { 
                  if ( arr [ i ] [ j ]   &&  i != j  &&  vis [ j ] == false ) { 
                      if ( vis [ i ] == false ) 
                         answer ++ ; 
                      dfs ( arr ,  i ,  j ,  vis ) ; 
                     vis [ i ] = true ; 
                  } 
              } 
          } 
          for ( bool  i : vis ) { 
              if ( i == false ) 
                 answer ++ ; 
          } 
          return  answer ; 
      } 
 } ;