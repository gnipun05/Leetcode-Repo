// Submission for Graph study plan 
 class   Solution   { 
 public : 
     vector < vector < int >>   floodFill ( vector < vector < int >> &  image ,   int  sr ,   int  sc ,   int  newColor ) { 
          helper ( image , sr ,  sc ,  newColor ,  image [ sr ] [ sc ] ) ; 
          return  image ; 
      } 
      void   helper ( vector < vector < int >> &  image ,   int  sr ,   int  sc ,   int  newColor ,   int  prev ) { 
          int  n = image [ 0 ] . size ( ) ,  m = image . size ( ) ; 
          if ( sr < 0   ||  sc < 0   ||  sc >= n  ||  sr >= m  ||  image [ sr ] [ sc ] != prev  ||  image [ sr ] [ sc ] == newColor ) 
              return ; 
         image [ sr ] [ sc ] = newColor ; 
          helper ( image ,  sr ,  sc - 1 ,  newColor ,  prev ) ; 
          helper ( image ,  sr ,  sc + 1 ,  newColor ,  prev ) ; 
          helper ( image ,  sr - 1 ,  sc ,  newColor ,  prev ) ; 
          helper ( image ,  sr + 1 ,  sc ,  newColor ,  prev ) ; 
      } 
 } ;