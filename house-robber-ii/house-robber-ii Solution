// DP Study Plan 
 class   Solution   { 
 public : 
      int   rob ( vector < int > &  nums )   { 
          int  n = nums . size ( ) ; 
          if ( n <= 3 ) { 
              int  mx = 0 ; 
              for ( int  i : nums ) 
                 mx = max ( mx ,  i ) ; 
              return  mx ; 
          } 
         
          return   max ( helper ( nums ,   0 ,  n - 1 ) ,   helper ( nums ,   1 ,  n ) ) ; 
      } 
      int   helper ( vector < int >   & nums ,   int  start ,   int  end ) { 
         vector < int >   dp ( nums . size ( ) ,   0 ) ; 
         dp [ start ] = nums [ start ] ; 
         dp [ start + 1 ] = max ( nums [ start + 1 ] ,  nums [ start ] ) ; 
          for ( int  i = start + 2 ;  i < end ;  i ++ ) { 
             dp [ i ] = max ( dp [ i - 1 ] ,  dp [ i - 2 ] + nums [ i ] ) ; 
          } 
          return  dp [ end - 1 ] ; 
      } 
 } ;