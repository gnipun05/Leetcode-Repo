class   Solution   { 
 public : 
      long   long   solve ( vector < vector < int >>   & dp ,   int  lo ,   int  hi ,  vector < int >   & cuts ) { 
          if ( hi - lo <= 1 ) 
              return   0 ; 
          if ( dp [ lo ] [ hi ] != INT_MAX ) 
              return  dp [ lo ] [ hi ] ; 
          long   long  answer = INT_MAX ; 
          for ( int  k = lo + 1 ;  k < hi ;  k ++ ) { 
             answer = min < long   long > ( answer ,  cuts [ hi ] - cuts [ lo ] + solve ( dp ,  lo ,  k ,  cuts )   +   solve ( dp ,  k ,  hi ,  cuts ) ) ; 
          } 
         dp [ lo ] [ hi ] = ( int ) answer ; 
          return  answer ; 
      } 
      int   minCost ( int  n ,  vector < int > &  cuts )   { 
          if ( cuts . size ( ) == 1 ) 
              return  n ; 
         cuts . push_back ( 0 ) ; 
         cuts . push_back ( n ) ; 
          sort ( cuts . begin ( ) ,  cuts . end ( ) ) ; 
         vector < vector < int >>   dp ( 105 ,   vector < int >   ( 105 ,  INT_MAX ) ) ; 
          solve ( dp ,   0 ,  cuts . size ( ) - 1 ,  cuts ) ; 
          return  dp [ 0 ] [ cuts . size ( ) - 1 ] ; 
      } 
 } ;