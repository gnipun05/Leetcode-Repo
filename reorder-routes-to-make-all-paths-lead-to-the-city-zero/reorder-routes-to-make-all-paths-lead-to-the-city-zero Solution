class   Solution   { 
 public : 
      int  count = 0 ; 
      void   dfs ( vector < int >  adj [ ] ,  vector < bool >   & visited ,   int  node ) { 
         visited [ node ] = true ; 
          for ( int  i : adj [ node ] ) { 
              if ( visited [ abs ( i ) ] == false ) { 
                 count +=   ( i > 0 ) ; 
                  dfs ( adj ,  visited ,   abs ( i ) ) ; 
              } 
          } 
      } 
      int   minReorder ( int  n ,  vector < vector < int >> &  edges )   { 
         vector < bool >   vis ( n ,   false ) ; 
         vector < int >  adj [ n ] ; 
          for ( int  i = 0 ;  i < edges . size ( ) ;  i ++ ) { 
             adj [ edges [ i ] [ 0 ] ] . push_back ( edges [ i ] [ 1 ] ) ; 
             adj [ edges [ i ] [ 1 ] ] . push_back ( - edges [ i ] [ 0 ] ) ; 
          } 
          dfs ( adj ,  vis ,   0 ) ; 
          return  count ; 
      } 
 } ;