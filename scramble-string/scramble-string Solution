// resubmitting coz of it being the daily leetcode challenge 
 class   Solution   { 
 public : 
      bool   solve ( string a ,  string b ,  unordered_map < string ,   bool >   & dp ) { 
          if ( a . compare ( b ) == 0 ) 
              return   true ; 
          if ( a . size ( ) == 1 ) 
              return   false ; 
         string key = a + " " + b ; 
          if ( dp . count ( key ) ) 
              return  dp [ key ] ; 
          int  n = a . size ( ) ; 
          for ( int  i = 1 ;  i < n ;  i ++ ) { 
              bool  cond1 = solve ( a . substr ( 0 , i ) ,  b . substr ( 0 , i ) ,  dp )   &&   solve ( a . substr ( i ,  n - i ) ,  b . substr ( i ,  n - i ) ,  dp ) ; 
              bool  cond2 = solve ( a . substr ( 0 , i ) ,  b . substr ( n - i ,  i ) ,  dp )   &&   solve ( a . substr ( i ,  n - i ) ,  b . substr ( 0 ,  n - i ) ,  dp ) ; 
              if ( cond1  ||  cond2 ) { 
                  return  dp [ key ] = true ; 
              } 
          } 
          return  dp [ key ] = false ; 
      } 
      bool   isScramble ( string s1 ,  string s2 )   { 
          int  n = s1 . size ( ) ; 
         unordered_map < string ,   bool >  dp ; 
          return   solve ( s1 ,  s2 ,  dp ) ; 
      } 
 } ;