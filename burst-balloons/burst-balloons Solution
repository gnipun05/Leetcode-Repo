typedef  std :: vector < int >  vi ; 
 typedef  std :: vector < vector < int >>  vvi ; 
 
 class   Solution   { 
 public : 
      int   maxCoins ( vector < int > &  dims )   { 
         dims . insert ( dims . begin ( ) ,   1 ) ; 
         dims . push_back ( 1 ) ; 
          int  n  =  dims . size ( ) ; 
         vvi  dp ( n + 1 ,   vi ( n + 1 ,   - 1 ) ) ; 
         
          return   solve ( dp ,  dims ,   1 ,  n - 1 ) ; 
         
      } 
      int   solve ( vvi  & dp ,  vi  & dims ,   int  i ,   int  j ) { 
          if ( i >= j )      return   0 ; 
          int  mx = INT_MIN ; 
          for ( int  k = i ;  k < j ;  k ++ ) { 
              int  temp = ( ( dp [ i ] [ k ] == - 1 ) ? solve ( dp ,  dims ,  i ,  k ) : dp [ i ] [ k ] ) + 
                       ( ( dp [ k + 1 ] [ j ] == - 1 ) ? solve ( dp ,  dims ,  k + 1 ,  j ) : dp [ k + 1 ] [ j ] ) + 
                      dims [ i - 1 ] * dims [ k ] * dims [ j ] ; 
             mx = max ( mx ,  temp ) ; 
          } 
         dp [ i ] [ j ] = mx ; 
          return  mx ; 
      } 
 } ;