class   Solution   { 
  public : 
     vector < vector < int >>   insert ( vector < vector < int >> &  intervals ,  vector < int > &  newInterval )   { 
          int  n = intervals . size ( ) ; 
          if ( n == 0 ) 
              return   { newInterval } ; 
         vector < vector < int >>  answer ; 
          bool  flag = true ; 
          for ( int  i = 0 ;  i < n ;  i ++ ) { 
              if ( flag  &&  intervals [ i ] [ 1 ] >= newInterval [ 0 ] ) { 
                 flag = false ; 
                  if ( intervals [ i ] [ 0 ] > newInterval [ 1 ] ) { 
                     answer . push_back ( newInterval ) ; 
                     answer . push_back ( intervals [ i ] ) ; 
                      continue ; 
                  } 
                  int  end = max ( intervals [ i ] [ 1 ] ,  newInterval [ 1 ] ) ; 
                  int  start = min ( intervals [ i ] [ 0 ] ,  newInterval [ 0 ] ) ; 
                 i ++ ; 
                  while ( i < n  &&  end >= intervals [ i ] [ 0 ] ) { 
                     end = max ( end ,  intervals [ i ] [ 1 ] ) ; 
                     i ++ ; 
                  } 
                 answer . push_back ( { start ,  end } ) ; 
              } 
              if ( i == n ) 
                  break ; 
             answer . push_back ( intervals [ i ] ) ; 
          } 
          if ( flag == true ) 
             answer . push_back ( newInterval ) ; 
          return  answer ; 
      } 
  } ;