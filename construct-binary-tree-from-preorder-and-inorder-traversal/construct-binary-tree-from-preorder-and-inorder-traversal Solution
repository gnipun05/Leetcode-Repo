/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     TreeNode *   solve ( vector < int > &  pre ,   int  a ,   int  b ,  vector < int > &  in ,   int  x ,   int  y ) { 
          if ( a > b  ||  x > y ) 
              return   NULL ; 
         TreeNode *  root = new   TreeNode ( pre [ a ] ) ; 
          int  si = x ; 
          while ( in [ si ] != root -> val ) 
             si ++ ; 
         root -> left = solve ( pre ,  a + 1 ,  a + si - x ,  in ,  x ,  si - 1 ) ; 
         root -> right = solve ( pre ,  a + si - x + 1 ,  b ,  in ,  si + 1 ,  y ) ; 
          return  root ; 
      } 
     TreeNode *   buildTree ( vector < int > &  preorder ,  vector < int > &  inorder )   { 
          int  n = preorder . size ( ) ; 
          return   solve ( preorder ,   0 ,  n - 1 ,  inorder ,   0 ,  n - 1 ) ; 
      } 
 } ;