class   Solution   { 
 public : 
      void   dfs ( vector < pair < int ,   int >>  adj [ ] ,   int   & mn ,   int  node ,  vector < bool >   & vis ) { 
         vis [ node ] = true ; 
          for ( auto   [ x , y ] : adj [ node ] ) { 
             mn = min ( mn ,  y ) ; 
              if ( vis [ x ] == false ) 
                  dfs ( adj ,  mn ,  x ,  vis ) ; 
          } 
      } 
      int   minScore ( int  n ,  vector < vector < int >> &  roads )   { 
         vector < pair < int ,   int >>  adj [ n + 1 ] ; 
          int  mn = INT_MAX ; 
          for ( int  i = 0 ;  i < roads . size ( ) ;  i ++ ) { 
              int  a = roads [ i ] [ 0 ] ,  b = roads [ i ] [ 1 ] ,  c = roads [ i ] [ 2 ] ; 
             adj [ a ] . push_back ( { b ,  c } ) ; 
             adj [ b ] . push_back ( { a ,  c } ) ; 
          } 
         vector < bool >   vis ( n ,   false ) ; 
          dfs ( adj ,  mn ,   1 ,  vis ) ; 
          return  mn ; 
      } 
 } ;