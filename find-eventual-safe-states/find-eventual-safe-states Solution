class   Solution   { 
 public : 
     vector < bool >  answer ; 
      bool   dfs ( vector < vector < int >>   &  adj ,  vector < bool >   & vis ,   int  node ) { 
         vis [ node ] = true ; 
          bool  flag = true ; 
          if ( adj [ node ] . size ( ) == 0 ) { 
             answer [ node ] = true ; 
              return   true ; 
          } 
          for ( int  i : adj [ node ] ) { 
              if ( vis [ i ] == false ) { 
                  if ( dfs ( adj ,  vis ,  i ) == false ) { 
                     flag = false ; 
                  } 
              } 
              else   if ( answer [ i ] == false ) { 
                 flag = false ; 
              } 
          } 
          if ( flag ) 
             answer [ node ] = true ; 
          return  flag ; 
      } 
     
     vector < int >   eventualSafeNodes ( vector < vector < int >> &  graph )   { 
          int  n = graph . size ( ) ; 
         answer . resize ( n ,   false ) ; 
         vector < bool >   vis   ( n ,   false ) ; 
          for ( int  i = 0 ;  i < n ;  i ++ ) { 
              if ( vis [ i ] == false ) 
                  if ( dfs ( graph ,  vis ,  i ) ) 
                     answer . push_back ( i ) ; 
          } 
         vector < int >  res ; 
          for ( int  i = 0 ;  i < n ;  i ++ ) 
              if ( answer [ i ] ) 
                 res . push_back ( i ) ; 
          return  res ; 
      } 
 } ;