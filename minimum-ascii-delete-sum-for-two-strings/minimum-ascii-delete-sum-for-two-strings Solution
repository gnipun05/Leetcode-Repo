class   Solution   { 
 public : 
      int  dp [ 1002 ] [ 1002 ] ; 
      int   solve ( int  i ,  string  & s1 ,   int  j ,  string  & s2 ) { 
          if ( dp [ i ] [ j ] != - 1 ) 
              return  dp [ i ] [ j ] ; 
          if ( i == s1 . size ( ) ) { 
              int  sum = 0 ; 
              for ( int  k = j ;  k < s2 . size ( ) ;  k ++ ) 
                 sum += s2 [ k ] ; 
              return  sum ; 
          } 
          if ( j == s2 . size ( ) ) { 
              int  sum = 0 ; 
              for ( int  k = i ;  k < s1 . size ( ) ;  k ++ ) 
                 sum += s1 [ k ] ; 
              return  sum ; 
          } 
          if ( s1 [ i ] == s2 [ j ] ) 
             dp [ i ] [ j ] = solve ( i + 1 ,  s1 ,  j + 1 ,  s2 ) ; 
          else 
             dp [ i ] [ j ] = min ( solve ( i + 1 ,  s1 ,  j ,  s2 ) + s1 [ i ] ,   solve ( i ,  s1 ,  j + 1 ,  s2 ) + s2 [ j ] ) ; 
          return  dp [ i ] [ j ] ; 
      } 
      int   minimumDeleteSum ( string s1 ,  string s2 )   { 
          memset ( dp ,   - 1 ,   sizeof ( dp ) ) ; 
          int  m = s1 . size ( ) ,  n = s2 . size ( ) ; 
          return   solve ( 0 ,  s1 ,   0 ,  s2 ) ; 
      } 
 } ;