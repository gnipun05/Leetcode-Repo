/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   deleteDuplicates ( ListNode *  head )   { 
          if ( head == NULL   ||  head -> next == NULL ) 
              return  head ; 
         ListNode *  curr = new   ListNode ( ) ; 
         ListNode *  newHead = curr ; 
          while ( head ) { 
              if ( head -> next  &&  head -> val  ==  head -> next -> val ) { 
                  int  temp = head -> val ; 
                  while ( head  &&  head -> val == temp ) 
                     head = head -> next ; 
              } 
              else { 
                 curr -> next = head ; 
                 curr = curr -> next ; 
                 head = head -> next ; 
              } 
          } 
         curr -> next = NULL ; 
          return  newHead -> next ; 
      } 
 } ;