class   Solution   { 
 public : 
      bool   isValidSudoku ( vector < vector < char >> &  board )   { 
          for ( int  i = 0 ;  i < 9 ;  i ++ ) { 
             unordered_set < char >  s ; 
              for ( int  j = 0 ;  j < 9 ;  j ++ ) { 
                  if ( board [ i ] [ j ] == '.' ) 
                      continue ; 
                  if ( s . count ( board [ i ] [ j ] ) ) 
                      return   false ; 
                 s . insert ( board [ i ] [ j ] ) ; 
              } 
          } 
          for ( int  i = 0 ;  i < 9 ;  i ++ ) { 
             unordered_set < char >  s ; 
              for ( int  j = 0 ;  j < 9 ;  j ++ ) { 
                  if ( board [ j ] [ i ] == '.' ) 
                      continue ; 
                  if ( s . count ( board [ j ] [ i ] ) ) 
                      return   false ; 
                 s . insert ( board [ j ] [ i ] ) ; 
              } 
          } 
          int  limit = 3 ,  limit2 = 3 ; 
          for ( int  k = 0 ;  k < 9 ;  k ++ ) { 
             unordered_set < int >  s ; 
              for ( int  i = limit - 3 ;  i < limit ;  i ++ ) { 
                  for ( int  j = limit2 - 3 ;  j < limit2 ;  j ++ ) { 
                      if ( board [ i ] [ j ] == '.' ) 
                          continue ; 
                      if ( s . count ( board [ i ] [ j ] ) ) 
                          return   false ; 
                     s . insert ( board [ i ] [ j ] ) ; 
                  } 
              } 
             limit2 = ( limit2 ) % 9 + 3 ; 
              if ( ( k + 1 ) % 3 == 0 ) 
                 limit += 3 ; 
          } 
          return   true ; 
      } 
 } ;