/**
  * Definition for singly-linked list.
  * struct ListNode {
  *     int val;
  *     ListNode *next;
  *     ListNode() : val(0), next(nullptr) {}
  *     ListNode(int x) : val(x), next(nullptr) {}
  *     ListNode(int x, ListNode *next) : val(x), next(next) {}
  * };
  */ 
 class   Solution   { 
 public : 
     ListNode *   swapPairs ( ListNode *  head )   { 
          if ( ! head  ||   ! head -> next ) 
              return  head ; 
         ListNode *  answer = head -> next ; 
         ListNode *  prev = NULL ; 
         ListNode *  curr = head ; 
          while ( curr  &&  curr -> next ) { 
             ListNode *  next = curr -> next ; 
             curr -> next = next -> next ; 
              if ( prev != NULL ) 
                 prev -> next = next ; 
             next -> next = curr ; 
             prev = curr ; 
             curr = curr -> next ; 
          } 
          return  answer ; 
      } 
 } ;