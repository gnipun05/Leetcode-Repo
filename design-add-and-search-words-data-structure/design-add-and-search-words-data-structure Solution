class   WordDictionary   { 
 public : 
     unordered_map  < int ,  vector < string >>  dict ; 
 
      WordDictionary ( )   { 
         
      } 
     
      void   addWord ( string word )   { 
          int  n = word . size ( ) ; 
         dict [ n ] . push_back ( word ) ; 
      } 
     
      bool   search ( string word )   { 
          int  n = word . size ( ) ; 
          for ( string word2 : dict [ n ] ) { 
              bool  flag = true ; 
              for ( int  i = 0 ;  i < n ;  i ++ ) { 
                  if ( word [ i ] == '.' ) 
                      continue ; 
                  else   if ( word [ i ] != word2 [ i ] ) { 
                     flag = false ; 
                      break ; 
                  } 
              } 
              if ( flag ) 
                  return  flag ; 
          } 
          return   false ; 
      } 
 } ; 
 
 /**
  * Your WordDictionary object will be instantiated and called as such:
  * WordDictionary* obj = new WordDictionary();
  * obj->addWord(word);
  * bool param_2 = obj->search(word);
  */