class   Solution   { 
 public : 
      int   shortestSubarray ( vector < int >  B ,   int  K )   { 
          int  N  =  B . size ( ) ,  res  =  N  +   1 ; 
         vector < long   long >   A ( N , B [ 0 ] ) ; 
         deque < int >  d ; 
          for   ( int  i  =   0 ;  i  <  N ;  i ++ )   { 
              if   ( i  >   0 ) 
                 A [ i ]   =  A [ i  -   1 ] + B [ i ] ; 
              if   ( A [ i ]   >=  K ) 
                 res  =   min ( res ,  i  +   1 ) ; 
              while   ( d . size ( )   >   0   &&  A [ i ]   -  A [ d . front ( ) ]   >=  K ) 
                 res  =   min ( res ,  i  -  d . front ( ) ) ,  d . pop_front ( ) ; 
              while   ( d . size ( )   >   0   &&  A [ i ]   <=  A [ d . back ( ) ] ) 
                 d . pop_back ( ) ; 
             d . push_back ( i ) ; 
          } 
          return  res  <=  N  ?  res  :   - 1 ; 
      } 
 } ;