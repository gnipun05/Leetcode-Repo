/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
 class   Solution   { 
 public : 
     vector < TreeNode * >   generateTrees ( int  n )   { 
          return   genVector ( 1 ,  n ) ; 
      } 
     vector < TreeNode * >   genVector ( int  start ,   int  end ) { 
          if ( start > end ) 
               return   { NULL } ; 
          if ( start == end ) 
              return   { new   TreeNode ( start ) } ; 
         vector < TreeNode * >  store ; 
          for ( int  i = start ;  i <= end ;  i ++ ) { 
             vector < TreeNode * >  leftNodes = genVector ( start ,  i - 1 ) ; 
             vector < TreeNode * >  rightNodes = genVector ( i + 1 ,  end ) ; 
              for ( TreeNode *  rightNode : rightNodes ) { 
                  for ( TreeNode *  leftNode : leftNodes ) { 
                     TreeNode *  temp = new   TreeNode ( i ) ; 
                     temp -> left = leftNode ; 
                     temp -> right = rightNode ; 
                     store . push_back ( temp ) ; 
                  } 
              } 
          } 
          return  store ; 
      } 
 } ;