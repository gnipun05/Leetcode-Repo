// first accepted solution is done usting a priority queue (O(logn)) 
 // this a deque solution (O(n)) 
 class   Solution   { 
 public : 
     vector < int >   maxSlidingWindow ( vector < int > &  nums ,   int  k )   { 
          int  n = nums . size ( ) ; 
         deque < int >  dq ; 
         vector < int >  answer ; 
          for ( int  i = 0 ;  i < nums . size ( ) ;  i ++ ) { 
              while ( dq . empty ( ) == false   &&  dq . front ( ) <= i - k ) 
                 dq . pop_front ( ) ; 
              while ( dq . empty ( ) == false   &&  nums [ dq . back ( ) ] < nums [ i ] ) 
                 dq . pop_back ( ) ; 
             dq . push_back ( i ) ; 
              if ( i >= k - 1 ) 
                 answer . push_back ( nums [ dq . front ( ) ] ) ; 
          } 
          return  answer ; 
      } 
 } ;