class   Solution   { 
 public : 
      bool   dfs ( vector < vector < int >> &  graph ,  vector < int > &  vis ,   int  node ,   bool  color ) { 
         vis [ node ] = color ; 
          for ( int  i : graph [ node ] ) { 
              if ( vis [ i ] == - 1   &&   dfs ( graph ,  vis ,  i ,   ! color ) == false ) 
                  return   false ; 
              else   if ( vis [ i ] == color ) 
                  return   false ; 
          } 
          return   true ; 
      } 
      bool   isBipartite ( vector < vector < int >> &  graph )   { 
          int  n = graph . size ( ) ; 
         vector < int >   vis ( n ,   - 1 ) ; 
          for ( int  i = 0 ;  i < n ;  i ++ ) 
              if ( vis [ i ] == - 1   &&   dfs ( graph ,  vis ,  i ,   true ) == false ) 
                  return   false ; 
          return   true ; 
      } 
 } ;