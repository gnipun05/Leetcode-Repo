/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
  class   Solution   { 
  public : 
      void   flatten ( TreeNode *  root )   { 
          if ( ! root )      return ; 
         queue < TreeNode * >  q ; 
          preorder ( root ,  q ) ; 
         TreeNode *  curr = q . front ( ) ;  q . pop ( ) ; 
          while ( q . empty ( ) == false ) { 
             curr -> left = NULL ; 
             curr -> right = q . front ( ) ; q . pop ( ) ; 
             curr = curr -> right ; 
          } 
      } 
      void   preorder ( TreeNode *  root ,  queue < TreeNode * >   & q ) { 
          if ( ! root )      return ; 
         q . push ( root ) ; 
          preorder ( root -> left ,  q ) ; 
          preorder ( root -> right ,  q ) ; 
      } 
  } ;