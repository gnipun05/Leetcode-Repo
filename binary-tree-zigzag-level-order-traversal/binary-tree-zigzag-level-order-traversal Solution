/**
  * Definition for a binary tree node.
  * struct TreeNode {
  *     int val;
  *     TreeNode *left;
  *     TreeNode *right;
  *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
  *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
  *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
  * };
  */ 
   // Resubmitting coz of it being the daily leetcode challenge 
 class   Solution   { 
 public : 
     vector < vector < int >>   zigzagLevelOrder ( TreeNode *  root )   { 
          if ( root == NULL ) 
              return   { } ; 
         vector < vector < int >>  answer ; 
         queue < TreeNode * > q ; 
         q . push ( root ) ; 
          int  count = - 1 ; 
          while ( q . empty ( ) == false ) { 
              int  n = q . size ( ) ; 
             count ++ ; 
             vector < int >   temp ( n ) ; 
              for ( int  i = 0 ;  i < n ;  i ++ ) { 
                 TreeNode *  u = q . front ( ) ;  q . pop ( ) ; 
                  int  index = ( answer . size ( ) % 2 ) ? n - 1 - i : i ; 
                 temp [ index ] = u -> val ; 
                  if ( u -> left ) 
                     q . push ( u -> left ) ; 
                  if ( u -> right ) 
                     q . push ( u -> right ) ; 
              } 
             answer . push_back ( temp ) ; 
          } 
          return  answer ; 
      } 
 } ;